(() => { var e = { "./assets/js/components/faq/accordion.js": e => { var t = { displayMode: "", collectionProps: [], itemsProps: [], enabledFaqStyle: 0, init: function (e) { this.itemsProps = e.items, this.collectionProps = e.collection, this.displayMode = this.collectionProps.display_mode, this.enabledFaqStyles = this.collectionProps.enable_faq_styles }, getAccordions: function () { for (var e = "", t = 0; t < this.itemsProps.length; t++)0 != this.itemsProps[t].length && (e += this.getAccordion(this.itemsProps[t])); return e }, getAccordion: function (e) { var t = this, o = e.post_id ? "post-" + e.post_id : "terms-" + e.term_id, n = e.post_id ? "title_icon" : "category_title_icon", a = t.getAccordionStyles(), i = t.getUrlAttribute(e), s = t.getTitleIcon(n), r = t.getCustomToggleIcon(), c = "", d = "", l = s + e.title, u = ""; return "open_all_faqs" == this.collectionProps.open_by_default && (d += " active", c += "display:block;"), "" != r && (d += " custom-icon"), "left" == this.collectionProps.icon_position && "1" == this.enabledFaqStyles && "faq_list" != this.displayMode && (d += " accordion__icon__position--ltr"), c += a.body_background, u += '<li class="accordion__item">', u += '<div class="accordion__header ' + d + '" data-id="' + o + '" data-item="' + i + '" data-tags="' + e.tags + '" style="' + a.header_background + '">', u += t.getAccordionHeaderContentByTag(l), u += r, u += "</div>", u += '<div class="accordion__body" style="' + c + '">', u += e.content, u += "</div>", u += "</li>" }, getUrlAttribute: function (e) { if (!("1" == this.collectionProps.faq_url_attribute)) return ""; var t = e.post_id ? "post-" + e.post_id : "terms-" + e.term_id, o = ""; "post_slug" == this.collectionProps.faq_url_type && "premium" === helpie_faq_object.plan ? o = e.slug.toLowerCase().replace(" ", "-") : o = "hfaq-" + t; return o }, getTitleIcon: function (e) { var t = "", o = "title_icon" == e ? this.collectionProps.title_icon : this.collectionProps.category_title_icon; return "" == o || "1" != this.enabledFaqStyles ? t : t = '<span class="accordion__title-icon"><i class="faq-title-icon ' + o + '"></i></span>' }, getCustomToggleIcon: function () { var e = ""; if ("faq_list" == this.displayMode || "1" != this.enabledFaqStyles) return e; var t = "open_all_faqs" == this.collectionProps.open_by_default ? " open-all" : ""; return "custom" === this.collectionProps.toggle_icon_type && "" != this.collectionProps.toggle_open && "" != this.collectionProps.toggle_off && (e = '<span class="accordion__toggle ' + t + '">', e += '<span class="accordion__toggle--open"><i class="accordion__toggle-icons ' + this.collectionProps.toggle_open + '"></i></span>', e += '<span class="accordion__toggle--close"><i class="accordion__toggle-icons ' + this.collectionProps.toggle_off + '"></i></span>', e += "</span>"), e }, getAccordionStyles: function () { var e = "", t = ""; return "" != this.collectionProps.accordion_background && (e = "background:" + this.collectionProps.accordion_background.header, t = "background:" + this.collectionProps.accordion_background.body), { header_background: e, body_background: t } }, getAccordionHeaderTag: function () { var e = this.getAllowedHeaderTags(), t = "" != this.collectionProps.accordion_header_tag ? this.collectionProps.accordion_header_tag : "default"; return e[t] && "premium" === helpie_faq_object.plan && "1" == this.enabledFaqStyles && "default" != t && "p" != t ? t : "div" }, getAllowedHeaderTags: function () { return { h1: "Heading 1", h2: "Heading 2", h3: "Heading 3", h4: "Heading 4", h5: "Heading 5", h6: "Heading 6", p: "Paragraph" } }, getAccordionHeaderContentByTag: function (e) { var t = this.getAccordionHeaderTag(), o = ""; return o += "<" + t + " class='accordion__title'>", o += e, o += "</" + t + ">" } }; e.exports = t }, "./assets/js/components/faq/collections.js": e => { var t = { getFaqs: function (e) { var t = this.getCurrentShortcodeViewProps(e.shortcodeIndex); return this.getCurrentPageViewProps(e, t) }, getCurrentShortcodeViewProps: function (e) { return window.HELPIE_FAQS[e] }, getCurrentPageViewProps: function (e, t) { var o = t.collection.limit, n = parseInt(e.page) * parseInt(o), a = parseInt(n) + parseInt(o), i = t.items; return t.collection.total_no_of_pages = this.getTotalNoOfPages(t), slicedItems = i.slice(n, a), { collection: t.collection, items: slicedItems } }, getTotalNoOfPages: function (e) { var t = e.items.length, o = e.collection.limit, n = Math.ceil(parseInt(t) / parseInt(o)); return n > 1 ? n - 1 : 0 } }; e.exports = t }, "./assets/js/components/faq/functions.js": (e, t, o) => { var n = o("./assets/js/components/faq/accordion.js"), a = ".helpie-faq", i = ".accordion", s = "accordion--hide", r = ".helpie-faq__pagination", c = { getElements: function (e) { var t = jQuery(e).closest(a), o = t.find(i), n = t.find(r); return { root: t, pagination: n, current: jQuery(e), accordion: o } }, getShortcodeIndex: function (e) { var t = jQuery(e.root).attr("data-shortcode-index"); return parseInt(t) }, getCollectionPropsFromHtml: function (e) { var t = jQuery(e.root).attr("data-collection"), o = {}; return void 0 !== t && "undefined" !== t && "" != t && (o = JSON.parse(t)), o }, getPaginationCurrentPage: function (e) { var t = jQuery(e.root).attr("data-pagination"); return t = null == t ? 0 : parseInt(t) }, paginationEnabled: function (e) { return this.getElements(e).pagination.length > 0 ? "1" : "0" }, searchTermFromFaqObject: function (e, t) { var o = this, n = []; return e.forEach((function (e, a) { var i = o.isTitleMatch(e, t), s = o.isContentMatch(e, t), r = o.searchByTags(e, t); !!(i || s || r) && n.push(e) })), n }, isTitleMatch: function (e, t) { return !(e.title.toLowerCase().search(t) < 0) }, isContentMatch: function (e, t) { var o = e.content.replace(/<[^>]+>/g, ""); return !((o = o.toLowerCase()).search(t) < 0) }, searchByTags: function (e, t) { var o = !1; return null == e.tags || "undefined" == e.tags || 0 == e.tags.length || e.tags.split(",").forEach((function (e) { -1 != (e = e.toLowerCase()).search(t) && (o = !0) })), o }, appendFaqsContent: function (e, t) { var o = this, n = o.getFaqsContent(t); jQuery(e.accordion).removeClass(s).empty().append(n), o.setSearchAttributes(e), o.moveToTop(e) }, getFaqsContent: function (e) { return n.init(e), n.getAccordions() }, setSearchAttributes: function (e) { jQuery(e.root).find(".accordion__item").each((function () { var e = jQuery(this).text().toLowerCase(); jQuery(this).attr("data-search-term", e) })) }, moveToTop: function (e) { var t = jQuery(e.accordion).offset().top; t = parseInt(t) - parseInt(70), window.scrollTo({ top: t, behavior: "smooth" }) } }; e.exports = c }, "./assets/js/components/faq/object_search.js": (e, t, o) => { var n = o("./assets/js/components/faq/collections.js"), a = o("./assets/js/components/faq/pagination.js"), i = o("./assets/js/components/faq/accordion.js"), s = o("./assets/js/components/faq/functions.js"), r = { init: function (e, t) { var o = s.getElements(e), r = s.getShortcodeIndex(o), c = n.getCurrentShortcodeViewProps(r), d = s.searchTermFromFaqObject(c.items, t), l = n.getTotalNoOfPages({ collection: c.collection, items: d }), u = jQuery(o.pagination).find(".helpie-faq__pagination__listItem .helpie-faq__pagination__listItem--anchor.active").attr("data-page"), h = { page: u = null == u ? 0 : parseInt(u), shortcodeIndex: r }, p = n.getCurrentPageViewProps(h, { collection: c.collection, items: d }); i.init({ collection: c.collection, items: p.items }); var g = i.getAccordions(); return jQuery(o.accordion).removeClass("accordion--hide").empty().append(g), a.renderPageLinks(o.pagination, { current: h.page, last: l }), t } }; e.exports = r }, "./assets/js/components/faq/pagination.js": (e, t, o) => { var n = o("./assets/js/components/faq/collections.js"), a = o("./assets/js/components/faq/functions.js"), i = ".helpie-faq__pagination", s = "helpie-faq__pagination--hide", r = ".helpie-faq__pagination__listItem .helpie-faq__pagination__listItem--anchor", c = { init: function () { this.events() }, events: function () { var e = this; jQuery(i).on("click", r, (function () { e.loadFAQs(this) })) }, loadFAQs: function (e) { var t = this, o = jQuery(e).attr("data-page"), n = t.getTotalNoOfPage(e), i = t.getCurrentPage(e); if (o instanceof String || "string" == typeof o) if ("PREV" == o) { if (0 == i) return !1; o = parseInt(i) - 1 } else if ("NEXT" == o) { if (parseInt(i) === parseInt(n)) return !1; o = parseInt(i) + 1 } var s = a.getElements(e), r = a.getCollectionPropsFromHtml(s); r.search_term = t.getSearchValue(s), r.page = o, t.setFAQs(r, s), 0 == jQuery(s.root).attr("data-search") && jQuery(s.root).attr("data-pagination", o) }, setFAQs: function (e, t) { var o = a.getShortcodeIndex(t); e.shortcodeIndex = o; var i = n.getCurrentShortcodeViewProps(o), s = i.items, r = n.getTotalNoOfPages(i); if ("" != e.search_term && null != e.search_term && "undefined" != e.search_term) { var c = a.searchTermFromFaqObject(s, e.search_term); r = n.getTotalNoOfPages({ collection: i.collection, items: c }), s = c } var d = n.getCurrentPageViewProps(e, { collection: i.collection, items: s }); a.appendFaqsContent(t, d), this.renderPageLinks(t.pagination, { current: e.page, last: r }) }, loader: function (e, t) { var o = 1 == t ? "active" : "", n = 0 == t ? "active" : ""; jQuery(e).closest(i).find(".helpie-faq__spinner").removeClass(n).addClass(o) }, getCurrentPage: function (e) { var t = jQuery(e).closest(i).find(r + ".active").attr("data-page"); return t = null == t ? 0 : parseInt(t) }, getTotalNoOfPage: function (e) { var t = jQuery(e).closest(i).find(r).last().attr("data-page"); return parseInt(t) }, renderPageLinks: function (e, t) { var o = this, n = ""; n += o.getPageLink({ page: 0, label: "First" }), n += o.getPageLink({ page: "PREV", label: "Previous" }), n += o.getPagesLinks(t.last, t.current), n += o.getPageLink({ page: "NEXT", label: "Next" }), n += o.getPageLink({ page: t.last, label: "Last" }), jQuery(e).removeClass(s).find(".helpie-faq__pagination__list").empty().append(n) }, getPagesLinks: function (e, t) { var o = [-2, -1, 0, 1, 2], n = ""; for (buttonItr = 0; buttonItr < o.length; buttonItr++) { var a = o[buttonItr], i = parseInt(t) + parseInt(a), s = i == t ? "active" : ""; i >= 0 && i <= e && (n += this.getPageLink({ classes: s, page: i, label: parseInt(i) + 1 })) } return n }, getPageLink: function (e) { var t = ""; return t += '<li class="helpie-faq__pagination__listItem">', t += '<a class="helpie-faq__pagination__listItem--anchor ' + (void 0 === e.classes ? "" : e.classes) + ' " data-page="' + e.page + '">' + e.label + "</a>", t += "</li>" }, getSearchValue: function (e) { var t = jQuery(e.root).find(".search__input"); return 0 == t.length ? "" : t.val().toLowerCase().replace(/[.*+?^${}()|[\]\\]/gi, "") } }; e.exports = c }, "./assets/js/components/faq/seach_by_attribute.js": (e, t, o) => { var n = o("./assets/js/components/faq/collections.js"), a = o("./assets/js/components/faq/functions.js"), i = o("./assets/js/components/faq/pagination.js"), s = { urlAttribute: "", doSearch: function (e) { var t = this; t.urlAttribute = e, jQuery(".helpie-faq").each((function () { if ("1" === jQuery(this).attr("data-pagination-enabled")) { var e = jQuery(this).attr("data-shortcode-index"), o = n.getCurrentShortcodeViewProps(e), i = a.getElements(this); t.searchByUrlAttribute(o, i) } })) }, searchByUrlAttribute: function (e, t) { var o = this, s = e.items, r = o.urlAttribute.search("hfaq") < 0, c = 0; s.forEach((function (e, t) { var n = e.slug; r || (n = "hfaq-post-" + e.post_id), n = "#" + n, o.urlAttribute == n && (c = t) })); var d = n.getTotalNoOfPages(e), l = { totalNoOfPage: d, accordionIndex: c }, u = o.getPageNumber(e, l); if (l.page = u, u > 0) { var h = n.getCurrentPageViewProps(l, e); a.appendFaqsContent(t, h), i.renderPageLinks(t.pagination, { current: u, last: d }) } }, getPageNumber: function (e, t) { for (var o = e.collection.limit, n = 0, a = 0; a <= t.totalNoOfPage; a++) { var i = parseInt(a) * parseInt(o), s = parseInt(i) + parseInt(o); t.accordionIndex >= i && t.accordionIndex <= s && (n = a) } return n } }; e.exports = s }, "./assets/js/components/insights/tracker.js": e => { var t = { init: function () { this.nonce = helpie_faq_object.nonce }, searchCounter: function (e) { var t = { action: "helpie_faq_search_counter", nonce: this.nonce, searchTerm: e }; jQuery.post(helpie_faq_object.ajax_url, t, (function (e) { })) }, clickCounter: function (e) { this.ajaxRequest(e) }, ajaxRequest: function (e) { var t = { action: "helpie_faq_click_counter", nonce: this.nonce, id: e }; jQuery.post(helpie_faq_object.ajax_url, t, (function (e) { })) } }; e.exports = t }, "./assets/js/components/submission/submission.js": (e, t, o) => { var n = o("./assets/js/components/submission/submission_ajax.js"), a = { init: function () { if ("" == helpie_faq_object.enabled_submission) return !1; this.eventHandler() }, eventHandler: function () { this.initChosen(), this.toggleForm(), this.submitForm(), "premium" == helpie_faq_object.plan && n.getLoggedEmail() }, initChosen: function () { jQuery(".helpie-faq").find(".form__section .faq_categories").each((function () { jQuery(this).chosen({ width: "100%" }) })) }, submitForm: function () { var e = this; jQuery(".helpie-faq").on("click", ".form__submit", (function (t) { t.stopPropagation(); var o = jQuery(this).closest(".form__section"), a = o.find(".form__text").val(), i = o.find(".form__email").val(), s = o.find(".form__textarea").val(), r = o.data("woo-product"), c = o.data("kb-category"), d = o.find(".faq_categories").val(), l = o.find("input[name=faq_group_id]").val(), u = { action: "helpie_faq_submission", nonce: e.nonce, question: a, categories: d, group_id: l }; i && (u.email = i), s && (u.answer = s), r && (u.woo_product = r), c && (u.kb_category = c), (a && e._isEmail(i) || a && null == i) && (t.preventDefault(), n.postForm(u, o)) })) }, toggleForm: function () { jQuery(".helpie-faq").on("click", ".form__toggle", (function (e) { e.preventDefault(), e.stopPropagation(); var t = jQuery(this).parent().next(".form__section"), o = this.value, n = ""; t.next().hide(), o === faqStrings.addFAQ ? (n = faqStrings.hide, t.show()) : (n = faqStrings.addFAQ, t.hide()), this.value = n })) }, _isEmail: function (e) { return !!/^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(e) } }; e.exports = a }, "./assets/js/components/submission/submission_ajax.js": e => { var t = { postForm: function (e, t) { thisModule = this, jQuery.post(helpie_faq_object.ajax_url, e, (function (e) { var o = JSON.parse(e); "publish" == o.postStatus ? (thisModule._successMessage(t), setTimeout((function () { location.reload() }), 1e3)) : "pending" == o.postStatus && thisModule._successMessage(t) })); var o = t.find(".faq_default_category_term_id").val(); t.find(".form__text").val(""), t.find(".form__email").val(""), t.find(".form__textarea").val(""), t.find(".faq_categories").val(o).trigger("chosen:updated"), "premium" == helpie_faq_object.plan && thisModule.getLoggedEmail() }, getLoggedEmail: function () { thisModule = this; var e = { action: "helpie_faq_submission_get_logged_email", nonce: thisModule.nonce }, t = jQuery(".form__section .form__email"); t && jQuery.get(helpie_faq_object.ajax_url, e, (function (e) { var o = JSON.parse(e); o.loggedEmail && t.val(o.loggedEmail) })) }, _appendItem: function (e, t) { var o = t.parent().find(".accordion"), n = { action: "helpie_faq_submission_get_item", nonce: thisModule.nonce, title: e.question }; n.content = e.answer ? e.answer : "Empty Content", jQuery.post(helpie_faq_object.ajax_url, n, (function (e) { var t = JSON.parse(e); o.append(t.singleItem) })) }, _successMessage: function (e) { jQuery(e).hide(), jQuery(e).next().show(), jQuery(e).next().addClass("active") } }; e.exports = t }, "./lib/stylus/js/search.js": (e, t, o) => { var n = o("./assets/js/components/insights/tracker.js"), a = o("./assets/js/components/faq/object_search.js"), i = o("./assets/js/components/faq/functions.js"), s = o("./assets/js/components/faq/collections.js"), r = o("./assets/js/components/faq/pagination.js"), c = { accordions: ".helpie-faq.accordions", faqSearch: ".helpie-faq .search__wrapper .search__input", accordion: ".accordion", accordionShow: "accordion--show", accordionHide: "accordion--hide", accordionHeading: ".accordion__heading", accordionHeadingShow: "accordion__heading--show", accordionHeadingHide: "accordion__heading--hide", accordionHeader: ".accordion .accordion__item .accordion__header", accordionItem: ".accordion__item", accordionItemShow: "accordion__item--show", accordionItemHide: "accordion__item--hide", accordionBody: ".accordion__body", searchMessage: ".search .search__message", searchMessageContent: "<p class='search__message__content'>" + faqStrings.noFaqsFound + "</p>" }, d = { searchTerm: "", typingTimer: 0, doneTypingInterval: 2e3, paginationEnabled: "0", setSearchAttr: function () { jQuery(c.accordionHeader).each((function () { var e = jQuery(this).text().toLowerCase(); jQuery(this).attr("data-search-term", e) })) }, isContentMatch: function (e, t) { return jQuery(e).find(c.accordionBody).text().toLowerCase().indexOf(t) >= 0 }, isTitleMatch: function (e, t) { var o = jQuery(e).find(".accordion__header").attr("data-search-term"); return null != o && "undefined" != o && o.search(t) >= 0 }, isCategoryHeadingMatch: function (e, t) { return jQuery(e).prev(c.accordionHeading).text().toLowerCase().indexOf(t) >= 0 }, isCategroryAccordionMatch: function (e, t) { if (0 == jQuery(e).hasClass("accordion__category")) return !1; return this.isTitleMatch(e, t) }, searchByAccordionItem: function (e, t) { var o = this; searchTerm = o.searchTerm; var n = o.isTitleMatch(e, searchTerm), a = o.isContentMatch(e, searchTerm), i = o.searchByTags(e, searchTerm), s = !!(n || a || i); return o.displayAccordionItem(e, s), s }, onSearchKeyup: function (e) { var t = this, o = t.searchTerm; jQuery(e).closest(c.accordions).children(c.accordion).each((function () { var e = jQuery(this), n = !1; 1 == t.isCategoryHeadingMatch(e, o) ? (n = !0, t.showAccordionSection(e, n)) : e.children(c.accordionItem).each((function () { $accordionItem = jQuery(this); var e = $accordionItem.hasClass("accordion__category"), a = t.searchByCategory($accordionItem, o), i = !(!e || !a), s = 0 == i, r = !1; s && (r = t.searchInnerAccordionsItems($accordionItem, o)); var c = 0 == e, d = !1; c && (d = t.searchByAccordionItem($accordionItem, {})), e && 0 == r && t.showCategoryWithAccordions($accordionItem, i), s && r && t.showAccordionBelongsToCategory($accordionItem, !0), 0 == n && (1 == i && (n = !0), 1 == s && 1 == r && (n = !0), 1 == c && 1 == d && (n = !0)) })), t.displayHeading(e, n), t.showAccordion(e, n) })) }, searchByCategory: function (e, t) { return this.isCategroryAccordionMatch(e, t) }, searchInnerAccordionsItems: function (e, t) { var o = this, n = !1; return e.find(c.accordionItem).each((function () { $item = jQuery(this), 1 == o.searchByAccordionItem($item, {}) && (n = !0) })), n }, init: function () { var e = this; e.setSearchAttr(), jQuery("body").on("keyup", c.faqSearch, (function (t) { var o = jQuery(this).val().toLowerCase().replace(/[.*+?^${}()|[\]\\]/gi, ""); e.searchTerm = o; var s = i.getElements(this); return e.paginationEnabled = i.paginationEnabled(this), e.canSeeEmptyFAQsBlock(this, "hide"), "" == e.searchTerm && "1" == e.paginationEnabled ? (jQuery(s.root).attr("data-search", "0"), e.showAllAccordionsFromObject(this), !1) : "" == e.searchTerm && "1" != e.paginationEnabled ? (e.showAllAccordions(this), !1) : ("1" == e.paginationEnabled ? (jQuery(s.root).attr("data-search", "1"), a.init(this, o)) : e.onSearchKeyup(this), e.showEmptyFAQsContent(this), "" != e.searchTerm && (clearTimeout(e.typingTimer), void (e.typingTimer = setTimeout((function () { n.searchCounter(e.searchTerm) }), e.doneTypingInterval)))) })) }, showAllAccordions: function (e) { var t = this; jQuery(e).closest(c.accordions).children(c.accordion).each((function () { var e = jQuery(this); t.showAccordion(e, true), t.displayHeading(e, true), e.find(c.accordion).removeClass(c.accordionHide).addClass(c.accordionShow), e.find(c.accordionItem).removeClass(c.accordionItemHide).addClass(c.accordionItemShow) })) }, showEmptyFAQsContent: function (e) { var t = this, o = 0, n = jQuery(e).closest(c.accordions).find(c.accordionItem).length; jQuery(e).closest(c.accordions).find(c.accordionItem).each((function () { 0 == jQuery(this).is(":visible") && (o = parseInt(o) + 1) })), o == n && (jQuery(e).closest(c.accordions).find(c.accordion).each((function () { var e = jQuery(this); t.displayHeading(e, !1), t.showAccordion(e, !1) })), jQuery(e).closest(c.accordions).find(c.searchMessage).empty().show().append(c.searchMessageContent)) }, canSeeEmptyFAQsBlock: function (e, t) { var o = "none"; "show" == t && (o = "block"), jQuery(e).closest(c.accordions).find(c.searchMessage).css("display", o) }, displayAccordionItem: function (e, t) { var o = 1 == t ? c.accordionItemShow : c.accordionItemHide, n = 0 == t ? c.accordionItemShow : c.accordionItemHide; e.removeClass(n).addClass(o) }, displayHeading: function (e, t) { var o = 1 == t ? c.accordionHeadingShow : c.accordionHeadingHide, n = 0 == t ? c.accordionHeadingShow : c.accordionHeadingHide; e.prev(c.accordionHeading).removeClass(n).addClass(o) }, showCategoryAccordions: function (e, t) { var o = 1 == t ? c.accordionItemShow : c.accordionItemHide, n = 0 == t ? c.accordionItemShow : c.accordionItemHide; jQuery(e).find(c.accordionItem).removeClass(n).addClass(o) }, showAccordionSection: function (e, t) { var o = this; o.displayHeading(e, t), o.showCategoryAccordions(e, t), o.showAccordion(e, t) }, showAccordion: function (e, t) { var o = 1 == t ? c.accordionShow : c.accordionHide, n = 0 == t ? c.accordionShow : c.accordionHide; jQuery(e).removeClass(n).addClass(o) }, showCategoryWithAccordions: function (e, t) { var o = this; o.displayAccordionItem(e, t), o.showCategoryAccordions(e, t), o.showAccordion(e, t) }, showAccordionBelongsToCategory: function (e, t) { jQuery(e).find(c.accordion).removeClass(c.accordionHide).addClass(c.accordionShow), this.displayAccordionItem(e, t) }, searchByTags: function (e, t) { var o = jQuery(e).find(".accordion__header").attr("data-tags"), n = !1; return null == o || "undefined" == o || 0 == o.length || o.split(",").forEach((function (e) { -1 != (e = e.toLowerCase()).search(t) && (n = !0) })), n }, showAllAccordionsFromObject: function (e) { var t = i.getElements(e), o = i.getPaginationCurrentPage(t), n = i.getShortcodeIndex(t), a = { page: o }, c = s.getCurrentShortcodeViewProps(n), d = s.getTotalNoOfPages(c), l = s.getCurrentPageViewProps(a, { collection: c.collection, items: c.items }); i.appendFaqsContent(t, l), r.renderPageLinks(t.pagination, { current: o, last: d }) } }; e.exports = d }, "./assets/css/main.scss": () => { } }, t = {}; function o(n) { var a = t[n]; if (void 0 !== a) return a.exports; var i = t[n] = { exports: {} }; return e[n](i, i.exports, o), i.exports } (() => { "use strict"; o("./assets/css/main.scss"); var e = o("./lib/stylus/js/search.js"), t = o("./assets/js/components/insights/tracker.js"), n = o("./assets/js/components/submission/submission.js"), a = o("./assets/js/components/faq/pagination.js"), i = o("./assets/js/components/faq/seach_by_attribute.js"), s = { nonce: helpie_faq_object.nonce, init: function () { this.setShortcodeIndex(), this.onPageLoadActions(), this.eventHandlers(), t.init(this.nonce), e.init(), n.init(), a.init() }, setShortcodeIndex: function () { var e = 0; jQuery(".helpie-faq").each((function () { jQuery(this).attr("data-shortcode-index", e), e++ })) }, eventHandlers: function () { var e = this; jQuery(".helpie-faq").on("click", ".accordion__header", (function (t) { if (t.preventDefault(), t.stopPropagation(), e.isFaqList(jQuery(this))) return !1; e.onHeaderClick(this); var o = jQuery(this).attr("data-item"); void 0 !== o && "undefined" !== o && "" !== o && (window.location.hash = jQuery(this).attr("data-item")) })), jQuery(".helpie-faq").on("click", ".accordion__title, .faq-title-icon", (function (t) { var o = jQuery(this).closest(".accordion__header"); if (t.preventDefault(), t.stopPropagation(), e.isFaqList(jQuery(this))) return !1; e.onHeaderClick(o); var n = o.attr("data-item"); void 0 !== n && "undefined" !== n && "" !== n && (window.location.hash = o.attr("data-item")) })) }, openFirstAccordion: function () { jQuery(".helpie-faq.accordions.open-first > .accordion:first").each((function () { var e = ".accordion__item:first > .accordion__header"; jQuery(this).find(e).addClass("active"), jQuery(this).find(e).next(".accordion__body").stop().slideDown(300) })) }, onPageLoadActions: function () { var e = window.location.hash, t = !1; "" != e && (i.doSearch(e), t = this.openHFaqAccordion(e)), t || this.openFirstAccordion() }, onHeaderClick: function (e) { jQuery(e).hasClass("active") ? this.closeAccordion(e) : (jQuery(e).closest(".helpie-faq.accordions").hasClass("faq-toggle") && (jQuery(e).closest(".accordion").find(".accordion__header").removeClass("active"), jQuery(e).closest(".accordion").find(".accordion__body").slideUp()), this.openAccordion(e)) }, openAccordion: function (e) { jQuery(e).addClass("active"), jQuery(e).next(".accordion__body").stop().slideDown(300); var o = jQuery(e).attr("data-id"); o && t.clickCounter(o) }, closeAccordion: function (e) { jQuery(e).removeClass("active"), jQuery(e).next(".accordion__body").stop().slideUp(300) }, openHFaqAccordion: function (e) { var t = !1; return jQuery(".helpie-faq.accordions .accordion .accordion__item").each((function () { if ("#" + jQuery(this).find(".accordion__header").attr("data-item") === e) { if (jQuery(this).find(".accordion__header").addClass("active"), jQuery(this).find(".accordion__header").next(".accordion__body").stop().slideDown(300), jQuery(this).parents(".accordion").length > 0) { var o = jQuery(this).closest(".accordion").parent(); o.prev().addClass("active"), o.show() } var n = jQuery(this).find(".accordion__header").offset().top; return n -= parseInt(70), window.scrollTo({ top: n, behavior: "smooth" }), t = !0, !1 } })), t }, isFaqList: function (e) { return jQuery(e).closest("article.faq_list").length } }; jQuery(document).ready((function () { s.init() })) })() })();